{"name": "test_if_locations_is_in_berlin", "status": "broken", "statusDetails": {"message": "TypeError: 'NoneType' object is not subscriptable", "trace": "self = <test.test_location.TestCompany testMethod=test_if_locations_is_in_berlin>\n\n    def test_if_locations_is_in_berlin(self):\n        \"\"\"\n        Tests if all location names in the response contain the substring 'Berlin'.\n    \n        - Asserts that the response status code is 200.\n        - Asserts that all location names contain 'Berlin'.\n        \"\"\"\n        # Act\n>       all_names_contain_berlin = Location(self._api_request).all_names_contain_berlin(self.response_body)\n\ntest\\test_location.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse_body = {'data': None, 'message': 'The request failed. You will not be charged for this request', 'success': False}\n\n    @staticmethod\n    def all_names_contain_berlin(response_body):\n        \"\"\"\n        Checks if all 'name' fields in the response data contain the substring 'Berlin'.\n    \n        :param response_body: (dict) The JSON response body containing the data.\n        :return: bool: True if all names contain 'Berlin', False otherwise.\n        \"\"\"\n        try:\n            # Extract the list of items - that in this case, locations - from the response body\n>           items = response_body[\"data\"][\"items\"]\nE           TypeError: 'NoneType' object is not subscriptable\n\nlogic\\location.py:35: TypeError"}, "description": "\n        Tests if all location names in the response contain the substring 'Berlin'.\n\n        - Asserts that the response status code is 200.\n        - Asserts that all location names contain 'Berlin'.\n        ", "start": 1721899496568, "stop": 1721899499732, "uuid": "8a8bdd5f-b2bc-47c9-ae8b-bc07f8ab43db", "historyId": "0164ed5f7aef2ec2702e5fe930561e27", "testCaseId": "0164ed5f7aef2ec2702e5fe930561e27", "fullName": "test.test_location.TestCompany#test_if_locations_is_in_berlin", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_location"}, {"name": "subSuite", "value": "TestCompany"}, {"name": "host", "value": "shibel"}, {"name": "thread", "value": "29392-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_location"}]}